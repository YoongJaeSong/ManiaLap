{
  "swagger": "2.0",
  "info": {
    "description": " [변경 사항] - 2019/02/06\n 1. post /contents -> /stories/{storyId}/contents로 변경되었습니다.\n\n 2. 기존의 '_'가 들어간 변수명을 변경했습니다.\n \t - post /stories\n (1) user_id-제거\n (2) story_title와 story_description-> title, description으로 변경, hashtagId추가\n 단, swagger bug로 인해 해당 api는 postman으로 테스트 해주세요.\n\n \t - get /stories/{storyId}\n  (1) 기존의 {story_id}->{storyId}로 변경\n\n \t - get /stories/{sotryId}/contents/{contentId}\n  (1) {content_id}->{contentId}로 변경.\n\n 3. Terms of service를 클릭하면 저의 slack으로 연결되기 때문에 여길 통해서 or 카카오톡으로 궁굼한것 문의 사항들을 물어보시면 됩니다. ",
    "version": "1.0.0",
    "title": "Project_mania",
    "termsOfService": "https://sejongduck.slack.com/messages/DD8VA56BD/convo/CD3D3F41E-1543895986.000500/",
    "contact": {
      "name": "YoonJae Song"
    }
  },
  "host": "kalin.iptime.org:3100",
  "basePath": "/",
  "tags": [
    {
      "name": "story",
      "description": "story작업에 대한 api"
    },
    {
      "name": "content",
      "description": "content작업에 대한 api"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/stories": {
      "get": {
        "tags": [
          "story"
        ],
        "summary": "story list를 건네주는 api",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "default - 1 입니다",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "503": {
            "description": "DB error"
          }
        }
      },
      "post": {
        "tags": [
          "story"
        ],
        "summary": "story 등록 api - Dug로 인해 해당 api는 test가 안됩니다",
        "description": "",
        "operationId": "CreateStroy",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "hashtagId",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "description": "배열로 안 보내져서 테스트 못합니다. postman으로 해주세요"
          },
          {
            "in": "formData",
            "name": "title",
            "required": true,
            "type": "string",
            "description": "제목"
          },
          {
            "in": "formData",
            "name": "decription",
            "required": true,
            "type": "string",
            "description": "story 설명"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "대표 이미지"
          }
        ],
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "File remove error"
          },
          "503": {
            "description": "DB error"
          }
        }
      }
    },
    "/stories/{storyId}": {
      "get": {
        "tags": [
          "story"
        ],
        "summary": "해당 스토리의 section과 content들을 넘겨주는 api",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "required": false
          },
          {
            "in": "path",
            "name": "storyId",
            "type": "integer",
            "required": true,
            "description": "to confirm what the story"
          }
        ],
        "responses": {
          "200": {
            "description": "successful to get the story info",
            "schema": {
              "type": "string",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "msg": "success"
            }
          },
          "503": {
            "description": "DB error"
          },
          "null": null
        }
      }
    },
    "/stories/{storyId}/contents/{contentId}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "contentId에 해당되는 content를 보여주는 api",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "storyId",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "contentId",
            "type": "integer",
            "required": true,
            "description": "어떤 content인지 확인하기 위해서 필요"
          }
        ],
        "responses": {
          "200": {
            "description": "successful to get the content",
            "schema": {
              "type": "string",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "msg": "success"
            }
          },
          "503": {
            "description": "DB error"
          }
        }
      }
    },
    "/stories/{storyId}/contents": {
      "post": {
        "tags": [
          "content"
        ],
        "summary": "content 등록 api",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "storyId",
            "type": "integer",
            "required": true
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string",
            "required": true,
            "description": "content 제목"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": false,
            "description": "content 설명"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "required": true,
            "description": "content image"
          }
        ],
        "responses": {
          "201": {
            "description": "successful to create the content",
            "schema": {
              "type": "string",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "msg": "success"
            }
          },
          "400": {
            "description": "File remove error"
          },
          "503": {
            "description": "DB error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "story": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hashtags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}